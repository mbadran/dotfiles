# https://gist.github.com/660389
# http://superuser.com/questions/94612/macros-in-gnu-screen
#
# philosophy: rely on copy/scrollback rather than the mouse or trackpad

# settings {{{1

# set the escape key to ^y
escape ^yy

# disable visual bell
vbell off
vbell_msg " Ding! "

autodetach on

# don't show the startup message
startup_message off

defutf7 on

defscrollback 10000

# enable 256 colors (AB = background, AF=foreground)
termcap xterm 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm'
# pow_detach_msg "Screen session of \$LOGNAME \$:cr:\$:nl:ended."

# don't block command output if the terminal stops responding
# (for eg. if the ssh connection times out)
nonblock on

# enable background-color-erase setting.
defbce on

# use bright colors for bold text.
attrcolor b '.I'

# set the $TERM variable set to `xterm' for various environments
term xterm

# enable the terminal scrollbar too
termcapinfo xterm* ti@:te@

# don't resize terminal width when re-attached.
# termcapinfo xterm 'is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l'

# don't show residual editor text (for eg. after closing vim)
altscreen on

# set the default window title to the shell name
shell -$SHELL
#
# Keep dead windows around until I tell them to exit.
zombie ^dr

# keybindings {{{1

# note: some of these will override default terminal and vim shortcuts
# may need to reconsider

# start window numbering at 1, not 0
bind c screen 1
bind ^c screen 1
bind 0 select 10
screen 1

# use vim keys to navigate regions
bindkey ^j focus down
bindkey ^k focus up
bindkey ^l next
bindkey ^h prev
# bind j focus down
# bind k focus up
# bind t focus top
# bind b focus bottom

# open a new shell
# bindkey ^n screen 1
# open a new, blank split/region
# bind s split

# open a new shell in a new split/region
# bindkey ^s eval split "focus down" "screen 1"
bind s eval split "focus down" "screen 1"

# restore the dual split window layout
# bindkey ^o eval prev split "focus down" next next "focus up"

# close split shells properly
# bindkey ^w eval kill remove
bind k eval kill remove

# quick detach
# bindkey ^z eval detach

# quick quit
# bindkey ^q eval quit
bind q quit

# quick title reset
# bindkey ^t eval "title \025" title
bind A eval "title \025" title

# quick copy/scrollback mode
# bindkey ^[ eval copy

# quick paste
# bindkey ^p eval "paste ."
# bind p paste .

# max, min, and equal split/region bindkeys
# bindkey ^x eval "resize max"
bind x eval "resize max"
# bindkey ^i eval "resize min"
# bindkey ^e eval "resize ="
bind e eval "resize ="

# copy/yank to the mac clipboard
# bindkey ^y eval writebuf "exec sh -c '/usr/bin/pbcopy < /tmp/screen-exchange'"
# bindkey ^y eval writebuf "exec $SHELL -c '/usr/bin/pbcopy < /tmp/screen-exchange'"
bind y eval writebuf "exec $SHELL -c '/usr/bin/pbcopy < /tmp/screen-exchange'"

# caption {{{1

## statusline, customized. (should be one-line)
# hardstatus alwayslastline
# hardstatus string "%-w%{= BW}%50>%n %t%{-}%+w%<"
# hardstatus '%{gk}[ %{G}%H %{g}][%= %{wk}%?%-Lw%?%{=b kR}[%{W}%n%f %t%?(%u)%?%{=b kR}]%{= kw}%?%+Lw%?%?%= %{g}][%{Y}%l%{g}]%{=b C}[ %D %m/%d %C%a ]%{W}'
# hardstatus string "%{= kR} %-Lw%{=b Kk} %n%f %t %{-}%+Lw %=%{= dd}"
# caption always "%{= kw}%Y-%m-%d;%c %{= kw}%-Lw%{= kG}%{+b}[%n %t]%{-b}%{= kw}%+Lw%1`"
# caption always "%{= gk}%-Lw%{= rW}%50> %n%f* %t %{-}%+Lw%< %= %{= Gk} %H %{= rW} %l %{= Gk} %0c:%s %d/%m %{-}"
# caption always "%{= gk}%-Lw%{= rW}%50> %n%f* %t %{-}%+Lw%< %= %{= Gk} %H %{= rW}%{= Gk}%{-}"
# caption always '%?%F%{= gW}%:%{= Kk}%?%2n%f%07=%t%='
# caption always '%?%F%{= gW}%:%{= Kk}%?%2n%f%07=%t%=%{= Gk} %H %{-}'
caption always "%{= gk}%-Lw%{= rW}%50> %n%f* %t %{-}%+Lw%< %= %{= Gk} %H %{-}"
# caption always "%{= gk}%-Lw%{= rW}%50> %n%f* %t %{-}%+Lw%< %= %{= Gk} $STY %{-}"
# screen $SHELL -c "screen -X caption always '%{= gk}%-Lw%{= rW}%50> %n%f* %t %{-}%+Lw%< %= %{= Gk} $STY %{-}'"
# screen $SHELL -c 'screen -X caption string "$STY"'

# changes the windowlist format to suit caption/hardstatus
windowlist title  '%{u .g}Num Flags Title%=[0-9] select the number [movement] j,C-n:Down k,C-p:Up (C-)f:PageDown (C-)b:PageUp'
windowlist string '%{.g}%3n %{.y}%f%09=%{dg} %t %='

# Give me some info at the bottom of each window and the bottom of screen like scrollable tabbed bar.
# e.g.:
# +----------------------------------------------------------------------------+
# |                                                                            |
# |                                                                            |
# |                                                                            |
# |                                                                            |
# +----------------------------------------------------------------------------+
# |11     top                                                                  | <--- caption (bellow each window)
# +----------------------------------------------------------------------------+
# |                                                                            |
# |                                                                            |
# |                                                                            |
# |                                                                            |
# |                                                                            |
# |                                                                            |
# +----------------------------------------------------------------------------+
# | 2     vim                                                                  | <--- caption
# +----------------------------------------------------------------------------+
# |                                                                            |
# |                                                                            |
# +----------------------------------------------------------------------------+
# | 3(L)  tail                                                                 | <--- caption
# +----------------------------------------------------------------------------+
# |09/24 13:23:54 hostname 0 zsh  1 man  2 vim  3 tail  11 to... (load average)| <--- hardstatus
# +----------------------------------------------------------------------------+

# caption always '%?%F%{= gW}%:%{= Kk}%?%2n%f%07=%t%='
# caption string description:
#
# %?          - Start of a conditional statement.
#  %F         - Use this part of the statement if the window has focus (i.e. it
#               is the only window or the currently active one).
#  %{= gW}    - bright white on green.
# %:          - else
#  %{= Kk}    - bright black on black
# %?          - End conditional statement.
#  %2n        - number of the current window with left 2 padding
#  %f         - flags for current window
#  %07=       - left 7 padding for window number and flags
#  %t         - title of current window
#  %=         - truncation/padding point

# hardstatus alwayslastline '%m/%d %02c:%s %{= .g}%H%{-} %L=%-w%45L>%{=u g.}%n %t%{-}%+w %-17<%=%{= .y}(%l)'
# hardstatus string description:
#
#  %m         - Two-letter month number
#  %d         - Two-letter day number
#  %02c       - time (hh:mm) in 24 hour format
#  %s         - seconds
# %{= .g}     - green color on default background
#  %H         - host name.
# %{-}        - undo last color change(so now we're back to default color)
#  %L=        - left padding start here
#  %-w        - window list up to but not including the current window (-)
#  %45L>      - truncation/padding marker; place this point about 45% of the
#               way into the display area (45)
# %{=u g.}    - default color on green, and underline.
#  %n         - number of the current window.
#  %t         - title of current window.
# %{-}        - undo last color change
#  %+w        - window list from the next window on (-)
#  %-17<      - truncation/padding point. place this point zero spaces (0)
#               from the right margin (-).
#  %=         - truncation/paddion point.
# %{= .y}     - yellow on default background.
#  %l         - host load average.

# APPENDIX: STRING ESCAPES (make extracts from screen (1))
#
# The attribute set can either be specified as hexadecimal number
# or a combination of the following letters:
#
#   d     dim
#   u     underline
#   b     bold
#   r     reverse
#   s     standout
#   B     blinking
#
# Colors are coded either as a hexadecimal number or two letters specifying
# the desired background and foreground color (in that order).
# The following colors are known:
#
#   k     black
#   r     red
#   g     green
#   y     yellow
#   b     blue
#   m     magenta
#   c     cyan
#   w     white
#   d     default color
#   .     leave color unchanged
#
# The capitalized versions of the letter specify bright colors.
# You can also use the pseudo-color `i' to set just the brightness and leave the color unchanged.
